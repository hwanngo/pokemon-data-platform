name: pokedata

services:
  redis:
    container_name: pokedata-redis
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: always
    mem_limit: 256m
    volumes:
      - ../cache/redis:/data
    command: redis-server --appendonly yes

  postgres:
    container_name: pokedata-postgres
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-pokemon_data}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    mem_limit: 1g

  app:
    container_name: pokedata-app
    build:
      context: ..
      dockerfile: docker/Dockerfile.app
    image: pokedata-app:latest
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-pokemon_data}
      API_BASE_URL: https://pokeapi.co/api/v2
      API_RATE_LIMIT: 20
      LOG_LEVEL: INFO
    volumes:
      - api_cache:/app/cache
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    mem_limit: 512m

  airflow-scheduler:
    container_name: pokedata-airflow-scheduler
    build:
      context: ..
      dockerfile: docker/Dockerfile.airflow
    image: pokedata-airflow:latest
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-pokemon_data}
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW_FERNET_KEY:-your_production_fernet_key_here}
      FLASK_LIMITER_STORAGE_URL: redis://redis:6379/0
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-pokemon_data}
      API_BASE_URL: https://pokeapi.co/api/v2
      API_RATE_LIMIT: 20
    volumes:
      - ../src:/opt/airflow/src
      - airflow_logs:/opt/airflow/logs
    command: airflow scheduler
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always
    mem_limit: 512m

  airflow-webserver:
    container_name: pokedata-airflow-webserver
    build:
      context: ..
      dockerfile: docker/Dockerfile.airflow
    image: pokedata-airflow:latest
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-pokemon_data}
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW_FERNET_KEY:-your_production_fernet_key_here}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY:-your_production_secret_key_here}
      AIRFLOW__WEBSERVER__BASE_URL: ${AIRFLOW_BASE_URL:-http://localhost:8080}
      FLASK_LIMITER_STORAGE_URL: redis://redis:6379/0
    volumes:
      - ../src:/opt/airflow/src
      - airflow_logs:/opt/airflow/logs
    ports:
      - "8080:8080"
    command: airflow webserver
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      airflow-scheduler:
        condition: service_started
    restart: always
    mem_limit: 512m

  airflow-init:
    container_name: pokedata-airflow-init
    build:
      context: ..
      dockerfile: docker/Dockerfile.airflow
    image: pokedata-airflow:latest
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-pokemon_data}
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      _AIRFLOW_DB_UPGRADE: "true"
      _AIRFLOW_WWW_USER_CREATE: "true"
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_ADMIN_PASSWORD:-admin}
    command: version
    depends_on:
      postgres:
        condition: service_healthy

  streamlit:
    container_name: pokedata-streamlit
    build:
      context: ..
      dockerfile: docker/Dockerfile.app
    image: pokedata-app:latest
    command: streamlit run src/analytics/dashboard.py
    ports:
      - "8501:8501"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-pokemon_data}
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    mem_limit: 512m

volumes:
  postgres_data:
  api_cache:
  airflow_logs: